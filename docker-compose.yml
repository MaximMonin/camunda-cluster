version: '3.7'

services:
  camunda-engine1:
    image: maximmonin/camunda
    container_name: camunda-engine1
    restart: always
    depends_on:
      - db
    networks:
      default:
    ports:
      - "2710:8080"
      - "2712:9404"
    expose:
      - 8080
      - 9404
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - DB_DRIVER=org.postgresql.Driver
      - DB_URL=jdbc:postgresql://db:5432/camunda
      - DB_USERNAME=camunda
      - DB_PASSWORD=camunda
      - WAIT_FOR=db:5432
      - WAIT_FOR_TIMEOUT=60
      - TZ=Europe/Kiev
      - JMX_PROMETHEUS=true

  camunda-engine2:
    image: maximmonin/camunda
    container_name: camunda-engine2
    restart: always
    depends_on:
      - db
    networks:
      default:
    ports:
      - "2711:8080"
      - "2713:9404"
    expose:
      - 8080
      - 9404
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - DB_DRIVER=org.postgresql.Driver
      - DB_URL=jdbc:postgresql://db:5432/camunda
      - DB_USERNAME=camunda
      - DB_PASSWORD=camunda
      - WAIT_FOR=db:5432
      - WAIT_FOR_TIMEOUT=60
      - TZ=Europe/Kiev
      - JMX_PROMETHEUS=true

  worker1:
    image: maximmonin/camunda-cluster-worker
    container_name: camunda-worker1
    restart: always
    depends_on:
      - camunda-engine1
    networks:
      default:
    environment:
      - LogLevel=info
      - CamundaUrl=http://camunda-engine1:8080/engine-rest
      - workerId=worker1
      - JobsToActivate=25
      - LongPolling=60000
      - TaskType=service-task
    volumes:
      - ./workers/node/server.js:/app/server.js
      - ./workers/js:/app/js
      - /etc/localtime:/etc/localtime:ro

  worker2:
    image: maximmonin/camunda-cluster-worker
    container_name: camunda-worker2
    restart: always
    depends_on:
      - camunda-engine2
    networks:
      default:
    environment:
      - LogLevel=info
      - CamundaUrl=http://camunda-engine2:8080/engine-rest
      - workerId=worker2
      - JobsToActivate=25
      - LongPolling=60000
      - TaskType=service-task
    volumes:
      - ./workers/node/server.js:/app/server.js
      - ./workers/js:/app/js
      - /etc/localtime:/etc/localtime:ro

  db:
    image: postgres:12.3
    restart: always
    container_name: camunda-cluster-db
    command: postgres -c max_connections=100
                      -c shared_buffers=1GB
                      -c effective_cache_size=1536MB
                      -c maintenance_work_mem=256MB
                      -c checkpoint_completion_target=0.7
                      -c wal_buffers=8MB
                      -c max_locks_per_transaction=1000
    networks:
      default:
        aliases:
          - db
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./cfg/setup-replication.sh:/docker-entrypoint-initdb.d/setup-replication.sh
      - ./cfg/init.sql:/docker-entrypoint-initdb.d/init.sql
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_PASSWORD=postgres

  db_replica:
    image: postgres:12.3
    restart: always
    container_name: camunda-cluster-db-replica
    depends_on:
      - db
    networks:
      default:
    entrypoint:
      - bash
      - -c
      - |
        echo 'Starting replication...'
        sleep 10
        pg_basebackup -h db -U camunda -p 5432 -D /var/lib/postgresql/data -Fp -Xs -P -R -w -C -S replica1
        exec docker-entrypoint.sh postgres -c max_connections=100 -c shared_buffers=1GB -c effective_cache_size=1536MB -c maintenance_work_mem=256MB -c max_locks_per_transaction=1000
    volumes:
      - ./dbreplica:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_PASSWORD=postgres
      - PGPASSWORD=camunda

  pgadmin:
    image: dpage/pgadmin4:4.26
    container_name: camunda-cluster-pgadmin
    restart: always
    depends_on:
      - db
    ports:
      - 2714:80
    networks:
      default:
    volumes:
      - ./cfg/servers.json:/pgadmin4/servers.json:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@postgres
      - PGADMIN_DEFAULT_PASSWORD=postgres
      - PGADMIN_SERVER_JSON_FILE=/pgadmin4/servers.json

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
